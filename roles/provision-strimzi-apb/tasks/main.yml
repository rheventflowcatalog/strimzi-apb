- name: Login As Super User
  command: "oc login -u {{ admin_user }} -p {{ admin_password }}"

- name: "Create Cluster Operator Service Account yaml"
  template:
    src: 010-ServiceAccount-strimzi-cluster-operator.yaml.j2
    dest: /tmp/010-ServiceAccount-strimzi-cluster-operator.yaml

- name: "Create Cluster operator Service Account"
  shell: "oc create -f /tmp/010-ServiceAccount-strimzi-cluster-operator.yaml -n {{ namespace }}"

- name: "Delete Cluster Operator Service Account Template File"
  file: path=/tmp/010-ServiceAccount-strimzi-cluster-operator.yaml state=absent

- name: "Create Cluster Operator Role"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/020-ClusterRole-strimzi-cluster-operator-role.yaml -n {{ namespace }}"

- name: "Create RoleBinding for Cluster Operator yaml"
  template:
    src: 020-RoleBinding-strimzi-cluster-operator.yaml.j2
    dest: /tmp/020-RoleBinding-strimzi-cluster-operator.yaml

- name: "Deploy RoleBinding for Cluster Operator yaml"
  shell: "oc create -f /tmp/020-RoleBinding-strimzi-cluster-operator.yaml -n {{ namespace }}"

- name: "Delete ClusterRoleBinding for Cluster Operator yaml"
  file: path=/tmp/020-RoleBinding-strimzi-cluster-operator.yaml state=absent

- name: "Create ClusterRoleBinding for Cluster Operator yaml"
  template:
    src: 021-ClusterRoleBinding-strimzi-cluster-operator.yaml.j2
    dest: /tmp/021-ClusterRoleBinding-strimzi-cluster-operator.yaml

- name: "Deploy ClusterRoleBinding for Cluster Operator yaml"
  shell: "oc create -f /tmp/021-ClusterRoleBinding-strimzi-cluster-operator.yaml -n {{ namespace }}"

- name: "Delete ClusterRoleBinding for Cluster Operator yaml"
  file: path=/tmp/021-ClusterRoleBinding-strimzi-cluster-operator.yaml state=absent

- name: "Create Broker delegation yaml"
  template:
    src: 030-ClusterRoleBinding-strimzi-cluster-operator-kafka-broker-delegation.yaml.j2
    dest: /tmp/030-ClusterRoleBinding-strimzi-cluster-operator-kafka-broker-delegation.yaml

- name: "Deploy Broker delegation yaml"
  shell: "oc create -f /tmp/030-ClusterRoleBinding-strimzi-cluster-operator-kafka-broker-delegation.yaml -n {{ namespace }}"

- name: "Delete Broker delegation yaml"
  file: path=/tmp/030-ClusterRoleBinding-strimzi-cluster-operator-kafka-broker-delegation.yaml state=absent

- name: "Create Broker Role"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/030-ClusterRole-strimzi-kafka-broker.yaml -n {{ namespace }}"

- name: "Create Entity-Operator Role"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/031-ClusterRole-strimzi-entity-operator.yaml -n {{ namespace }}"

- name: "Create Entity-Operator delegation yaml"
  template:
    src: 031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml.j2
    dest: /tmp/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml

- name: "Deploy Entity-Operator delegation yaml"
  shell: "oc create -f /tmp/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml -n {{ namespace }}"

- name: "Delete Entity-Operator delegation yaml"
  file: path=/tmp/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml state=absent

- name: "Create Topic-Operator Role"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/032-ClusterRole-strimzi-topic-operator.yaml -n {{ namespace }}"

- name: "Create Topic-Operator delegation yaml"
  template:
    src: 032-RoleBinding-strimzi-cluster-operator-topic-operator-delegation.yaml.j2
    dest: /tmp/032-RoleBinding-strimzi-cluster-operator-topic-operator-delegation.yaml

- name: "Deploy Topic-Operator delegation yaml"
  shell: "oc create -f /tmp/032-RoleBinding-strimzi-cluster-operator-topic-operator-delegation.yaml -n {{ namespace }}"

- name: "Delete Topic-Operator delegation yaml"
  file: path=/tmp/032-RoleBinding-strimzi-cluster-operator-topic-operator-delegation.yaml state=absent

- include_tasks: strimzi-crds.yml

- name: "Create Deplyment"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/050-Deployment-strimzi-cluster-operator.yaml -n {{ namespace }}"

- name: "Create Persistant Storage template"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/{{ STRIMZI_VERSION }}/examples/templates/cluster-operator/persistent-template.yaml -n {{ namespace }}"

# Check if the required Strimzi CO pods is ready
- name: "Wait for Strimzi topic Operator to become ready"
  shell: oc get pods --namespace={{ namespace }} -l 'name=strimzi-cluster-operator' -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}'| wc -w
  register: strimzi_co_result
  until: strimzi_co_result.stdout.find("1") != -1
  retries: 40
  delay: 5

- name: "Deploy a ZK and Kafka cluster"
  shell: "oc new-app strimzi-persistent -p CLUSTER_NAME={{ CLUSTER_NAME }} -p ZOOKEEPER_NODE_COUNT={{ ZOOKEEPER_NODE_COUNT }} -p KAFKA_NODE_COUNT={{ KAFKA_NODE_COUNT }} -p ZOOKEEPER_VOLUME_CAPACITY={{ ZOOKEEPER_VOLUME_CAPACITY }} -p KAFKA_VOLUME_CAPACITY={{ KAFKA_VOLUME_CAPACITY }} -p ZOOKEEPER_HEALTHCHECK_DELAY={{ ZOOKEEPER_HEALTHCHECK_DELAY }} -p ZOOKEEPER_HEALTHCHECK_TIMEOUT={{ ZOOKEEPER_HEALTHCHECK_TIMEOUT }} -p KAFKA_HEALTHCHECK_DELAY={{ KAFKA_HEALTHCHECK_DELAY }} -p KAFKA_HEALTHCHECK_TIMEOUT={{ KAFKA_HEALTHCHECK_TIMEOUT }} -p KAFKA_DEFAULT_REPLICATION_FACTOR={{ KAFKA_DEFAULT_REPLICATION_FACTOR }} -p KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} -p KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR={{ KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR }} -n {{  namespace }}"

# Check if the required Strimzi pods are all ready
- name: "Wait for Strimzi topic Operator to become ready"
  shell: oc get pods --namespace={{ namespace }} -l 'strimzi.io/name=my-cluster-entity-operator' -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}'| wc -w
  register: strimzi_result
  until: strimzi_result.stdout.find("3") != -1
  retries: 40
  delay: 5
